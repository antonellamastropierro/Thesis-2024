# geographic data and analysis
library(raster)

# mapping geographical data
library(geodata)

# uncertainty analysis for species distribution models
library(usdm)

# data manipulation
library(tidyr)
library(dplyr)

# read shapefiles
library(sf)

# generate virtual species distributions
library(virtualspecies)

#-------------------------------------------------------------------------------
#WORLDCLIM VARIABLES

worldclim <- worldclim_global(var="bio", res=10, path = tempdir())
print(worldclim)
#dimensions  : 1080, 2160, 19  (nrow, ncol, nlyr)
#resolution  : 0.1666667, 0.1666667  (x, y)
#extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax)
#coord. ref. : lon/lat WGS 84 (EPSG:4326)
# when turned to RasterLayer: # cells = 2332800


# to turn into RasterLayer
# worldclim_raster <- raster(worldclim)

#------------------------------------------------------------------------------
# DOWNLOAD ALPINE SHAPEFILE

setwd("~/UNIBO/Internship and Thesis/R Thesis Project/global_alpine_30m_v1_1")
alpine <- st_read("global_alpine_30m_v1_1.shp")

# crop out only Europe area
alpine_EUR <- filter(alpine, continent == "Europe")

# Check the shapefile CRS
print(st_crs(alpine_EUR))
print(st_crs(worldclim))
st_crs(alpine) = st_crs(worldclim)

# Ensure the CRS of the shapefile matches the WorldClim data
alpine_crs <- st_transform(alpine, crs(worldclim))

# Crop each bioclimatic variable to the shapefile extent
worldclim_EUR <- crop(worldclim, alpine_EUR)

# Mask the raster using the shapefile
alpine_EUR_raster <- mask(worldclim_EUR, alpine_EUR)

plot(alpine_EUR_raster[[1]])
plot(alpine_EUR_raster[[12]])

#------------------------------------------------------------------------------
vifcor(alpine_EUR_raster, th=0.7, keep = NULL, method = 'pearson')
# RETURNED: 3, 5, 8, 9, 15, 18, 19
# BIO3 = Isothermality (BIO2/BIO7) (Ã—100)
# BIO5 = Max Temperature of Warmest Month
# BIO8 = Mean Temperature of Wettest Quarter
# BIO9 = Mean Temperature of Driest Quarter
# BIO15 = Precipitation Seasonality (Coefficient of Variation)
# BIO18 = Precipitation of Warmest Quarter
# BIO19 = Precipitation of Coldest Quarter

# 6 variables were returned that DO NOT have a colinearity problem
# CHANGE THE NAMES SO WE KNOW

# filter out the unneeded variables
worldclim_EUR_alpinevar <- subset(alpine_EUR_raster, c(3, 5, 8, 9, 15, 18, 19))
names(worldclim_EUR_alpinevar)

# change the names of the variables
names(alpine_EUR_raster[[c(3, 5, 8, 9, 15, 18, 19)]]) <- c("Isothermality", "Max Temp of Warmest Month", 
                                                           "Mean Temp of Wettest Quarter", "Mean Temp of Driest Quarter",
                                                           "Precip Seasonality", "Precip of Warmest Quarter",
                                                           "Precip of Coldest Quarter")

#--------------------------------------------------------------------------------
# now we have the needed variables isolated per alpine conditions in Europe
# we need to convert them to dataframes to retrieve the mean and sd for each for
# input into VS

worldclim_EUR_alp_df <- as.data.frame(worldclim_EUR_alpinevar)
glimpse(worldclim_EUR_alp_df)
df <- worldclim_EUR_alp_df

# now it's a dataframe, we can get mean and sd for each variable
colMeans(df)
# Isothermality = 26.901819
# Max Temp of Warmest Month = 15.577946    
# Mean Temp of Wettest Quarter =  5.025422 
# Mean Temp of Driest Quarter = -2.294671
# Precip Seasonality = 29.108434
# Precip of Warmest Quarter = 267.251813 
# Precip of Coldest Quarter = 246.677202

# retrieve SD of all variables
summarize_all(df, sd)
# Isothermality = 4.950437
# Max Temp of Warmest Month = 2.840423
# Mean Temp of Wettest Quarter = 5.108197
# Mean Temp of Driest Quarter = 8.156361
# Precip Seasonality = 7.926176
# Precip of Warmest Quarter = 78.2355
# Precip of Coldest Quarter = 160.1534

#------------------------------------------------------------------------------
# NOW WE CAN create a VS based on alpine conditions

# first extract each needed variable

alp_pmtrs <- formatFunctions(df$Isothermality = c(fun = "dnorm", mean = 26.90, sd = 4.95),
                             df$`Max Temp of Warmest Month` = c(fun ='dnorm', mean = 15.58, sd=2.84),
                             df$`Mean Temp of Wettest Quarter`= c(fun = "dnorm", mean = 5.03, sd = 5.11),
                             df$`Mean Temp of Driest Quarter`= c(fun = "dnorm", mean = -2.29, sd = 8.16),
                             df$`Precip Seasonality`= c(fun = "dnorm", mean = 29.11, sd = 7.93),
                             df$`Precip of Warmest Quarter`= c(fun = "dnorm", mean = 267.25, sd = 78.24),
                             df$`Precip of Coldest Quarter`= c(fun = "dnorm", mean = 246.68, sd = 160.15))

