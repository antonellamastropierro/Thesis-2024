# SECTION 1: UNBIASED ALPINE VS

# OBJECTIVE 1: Create and Customize an Alpine Climate-Specific Unbiased VS for the AOI
# OBJECTIVE 2: Create Presence/Absence (Realized Niche) of VS and Sample First 100 Occurrences
# OBJECTIVE 3: Determine the Environmental (Abiotic) Variable Values of the Realized Niche of the Alpine VS and of the First 100 Samplings

################################################################################
# SECTION 0: PRELIMINARY RECAP
  # Retrieved AOI (European Alps) shapefile
  # Retrieved alpine climate shapefile
  # Retrieved CHELSA bio variables
  # Isolated bio variables to AOI
  # Isolated bio variables to alpine climate in AOI
  # Ran VIF test for multi-colinearity
  # Reduced Bio Variables to the following 7:
    # Annual Temp
    # Isothermality
    # Temp Seasonality
    # Mean Temp of Wettest Quarter
    # Mean Temp of Driest Quarter
    # Annual Precip
    # Precip Seasonality

################################################################################
# LEGEND:
# AOI = area of interest (European Alps mountain range)
# bio = CHELSA environmental variables
# alp = alpine climate locations
# df = dataframe
# pmtrs = parameters
# vs = virtual species
# pa = presence/absence
# occ = occurrences
################################################################################
# OBJECTIVE 1: Create and Customize an Alpine Climate-Specific Unbiased VS for the AOI
# PURPOSE: Using the isolated bio variables values in the alpine climate conditions
  #...of the  AOI, an unbiased custom alpine climate species can be created to
  #....be sampled.
# PART A: Retrieve mean and standard deviation values for selected bio variables
# PART B: Create suitability map of alpine-specific unbiased VS in the AOI using alpine parameters

#-------------------------------------------------------------------------------
# PART A: Retrieve mean and standard deviation values for selected bio variables

# the spatraster containing the values at each pixel need to be converted to dataframes
# ...in order to retrieve the mean and sd values for each of the 7 bio variable
# ...to input into our custom alpine VS

# convert the masked Europe alpine climate-specific spatraster into a dataframe
bio_AOI_alp_df <- as.data.frame(bio_AOI_alp)

# view the dataframe
glimpse(bio_AOI_alp_df)
# now it's a dataframe, showing all the values of each of the 8 variables located
#... specifically in the alpine climate areas of Europe

# Get the means and SDs of each variable to input later into the VS

# to get the means of all 8 variables at the same time
colMeans(bio_AOI_alp_df)
# Annual Temp = -2.53
# Isothermality = 0.31
# Temp Seasonality = 724.26
# Mean Temperature of Wettest Quarter = 2.80
# Mean Temperature of Driest Quarter = -8.77
# Annual Precip = 1783.65
# Precipitation Seasonality = 27.32

# retrieve SD of all 8 variables
summarize_all(bio_AOI_alp_df, sd)
# Annual Temp = 2.14
# Isothermality = 0.16
# Temp Seasonality = 26.61
# Mean Temperature of Wettest Quarter = 5.29
# Mean Temperature of Driest Quarter = 5.85
# Annual Precip = 432.63
# Precipitation Seasonality = 10.56

# the means and SDs have now been determined for the necessary 7 variables
# these values will be used as parameters to create a custom alpine-specific VS

#-------------------------------------------------------------------------------
# PART B: Create suitability map of alpine-specific unbiased VS in the AOI using alpine parameters

# first create parameters for alpine species using the mean and SD values retrieved from PART A
# the raster used will be the AOI bio variable raster to show the VS suitability in relation to the AOI
alp_pmtrs <- formatFunctions(x=bio_AOI,
                             "Annual Mean Temp" = c(fun = "dnorm", mean = -2.53, sd = 2.14),
                             "Isothermality" = c(fun = "dnorm", mean = 0.31, sd = 0.016),
                             "Temp Seasonality" = c(fun = "dnorm", mean = 724.26, sd = 26.61),
                             "Mean Temp of Wettest Quarter"= c(fun = "dnorm", mean = 2.80, sd = 5.29),
                             "Mean Temp of Driest Quarter"= c(fun = "dnorm", mean = -8.77, sd = 5.85),
                             "Annual Precip"= c(fun = "dnorm", mean = 1783.65, sd = 432.63),
                             "Precip Seasonality"= c(fun = "dnorm", mean = 27.32, sd = 10.56))

# input the alpine-specific parameters to generate an alpine-specific VS
alp_vs_1 <- generateSpFromFun(raster.stack = bio_AOI,
                              parameters = alp_pmtrs,
                              plot = TRUE)
# shows the env. suitability for AOI specific to alpine species (scale of 0 to 1)

dev.off()

# to save the first alpine VS generated
save(alp_vs_1, file = "VS_AOI_Unbiased/alp_vs_1")

# to load the alpine VS
load(file = "VS_AOI_Unbiased/alp_vs_1")

# to visualize the response functions that were inputted
plotResponse(alp_vs_1)
# all gaussian curves. Visualized the peak suitability values for each of the 7 variables


dev.off()

################################################################################
# OBJECTIVE 2: Create Presence/Absence (Realized Niche) of VS and Sample First 100 Occurrences
# PURPOSE: to retrieve the actual realized niche of the alpine VS
# PART A: Convert VS to presence/absence (baseline realized niche)
# PART B: Collect first occurrence samples (N: 1-100)

#-------------------------------------------------------------------------------
# PART A: Convert VS to presence/absence (baseline realized niche)

# now that the alpine VS is created, it can be converted to a P/A plot in order to
  # determine it's realized niche. The realized niche will be the presence-only raster

# use converttoPA() function to convert the suitability plot into a binary presence/absence plot
alp_pa_1 <- convertToPA(alp_vs_1, alpha = -0.05, beta = 0.65, plot = F)
# beta = inflection point of curve
# lower beta = wider distribution range (increase probability of finding suitable conditions)
# higher beta = smaller distribution range (decrease probability of finding suitable conditions)
# alpha = slope of curve ranging from linear to logistic to threshold like
# species prevalence: number of places occupied by the species
  #... out of the total number of available places
# alpha = -0.05 is set as a logistic-like curve
# beta = 0.65 to represent a more narrow niche breadth (inflection point at 65% suitability)

# for alpine vs maybe good to make higher beta
# maybe better to specify species prevalence to 3% since I found documents saying
# ... Alpine occupies 3% of world
# plot = TRUE)
alp_pa_1
# probabilistic method = logistic
# species prevalence = 0.0020

# save presence/absence VS 1
save(alp_pa_1, file = "VS_AOI_Unbiased/alp_pa_1")

# load presence/absence VS 1
# load(file = "VS_AOI_Unbiased/alp_pa_1")

# plot the presence/absence raster
plot(alp_pa_1$pa.raster)
# for suitability: alp_pa$suitab.raster
# for prob. of occurrence: alp_pa$probability.of.occurrence

# to view the number of presences and absence number of cells
freq(alp_pa_1$pa.raster)
# Present (1) = 672
# Absent (0) = 329965
# this is indicative of a rare species with a narrow niche breadth

# the presence/absence VS represents the realized niche of the VS, with respect
# ...to abiotic factors only

dev.off()

#-------------------------------------------------------------------------------
# PART B: Conduct Continuous Unbiased Sampling of Occurrences

